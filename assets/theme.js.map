{"version":3,"sources":["main.js","components/modal.js","sections/lookbook.js"],"names":[],"mappingsfile":"theme.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    initLookbookModal();\n});","function initModal() {\n    console.log('Modal JS loaded');\n}"," function initLookbookModal() {\n    const modal = document.getElementById('LookbookModal');\n    if (!modal) return;\n\n    setupModalOpen(modal);\n    setupOutsideClickClose(modal);\n    setupVariantSelection();\n    setupAddToCart();\n}\n\nfunction setupModalOpen(modal) {\n    document.querySelectorAll('.lookbook-trigger').forEach(btn => {\n        btn.addEventListener('click', () => modal.showModal());\n    });\n}\n\nfunction setupOutsideClickClose(modal) {\n    modal.addEventListener('click', event => {\n        const inner = modal.querySelector('.lookbook-modal__inner');\n        if (!inner) return;\n\n        const rect = inner.getBoundingClientRect();\n        const clickedOutside =\n            event.clientX < rect.left ||\n            event.clientX > rect.right ||\n            event.clientY < rect.top ||\n            event.clientY > rect.bottom;\n\n        if (clickedOutside) modal.close();\n    });\n}\n\nfunction setupVariantSelection() {\n    document.querySelectorAll('.lookbook-product').forEach(productCard => {\n        const productId = productCard.dataset.productId;\n        const optionInputs = productCard.querySelectorAll('[data-option-index]');\n        const variantInput = productCard.querySelector('.lookbook-product__variant-id');\n        const addButton = productCard.querySelector('.lookbook-product__add');\n\n        if (!optionInputs.length || !variantInput || !addButton) return;\n\n        const product = window.lookbookProducts?.find(p => p.id == productId);\n        if (!product) return;\n\n        function updateVariant() {\n            const selectedOptions = [...optionInputs].map(input => input.value);\n            const matchedVariant = product.variants.find(v =>\n                selectedOptions.every((opt, i) => v.options[i] === opt)\n            );\n\n            if (matchedVariant) {\n                variantInput.value = matchedVariant.id;\n                addButton.dataset.variantId = matchedVariant.id;\n            }\n        }\n\n        optionInputs.forEach(input => {\n            input.removeEventListener('change', updateVariant);\n            input.addEventListener('change', updateVariant);\n        });\n\n        updateVariant();\n    });\n}\n\nfunction setupAddToCart() {\n    let isAdding = false;\n\n    document.addEventListener('click', event => {\n        if (!event.target.matches('.lookbook-product__add') || isAdding) return;\n\n        const button = event.target;\n        const variantId = button.dataset.variantId;\n        if (!variantId) return;\n\n        isAdding = true;\n\n        fetch('/cart/add.js', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ id: variantId, quantity: 1 })\n        })\n            .then(res => res.json())\n            .then(() => {\n                button.textContent = 'âœ“ Added';\n                setTimeout(() => {\n                    button.textContent = 'Add to bag';\n                    isAdding = false;\n                }, 1500);\n\n                updateCartBubble();\n                openCartDrawer();\n                updateCartSection();\n            })\n            .catch(err => {\n                console.error(err);\n                alert('Failed to add product.');\n                isAdding = false;\n            });\n    });\n}\n\nfunction updateCartBubble() {\n    fetch('/cart.js')\n        .then(res => res.json())\n        .then(cart => {\n            const count = cart.item_count;\n            const countEl = document.querySelector('.cart-bubble__text-count');\n            if (countEl) countEl.textContent = count;\n\n            const hiddenEl = document.querySelector('.cart-bubble .visually-hidden');\n            if (hiddenEl) hiddenEl.textContent = `Total items in cart: ${count}`;\n\n            const bubble = document.querySelector('[ref=\"cartBubble\"]');\n            if (bubble) bubble.classList.remove('visually-hidden');\n        });\n}\n\nfunction openCartDrawer() {\n    const drawerDialog = document.querySelector('.cart-drawer__dialog');\n    if (drawerDialog?.showModal) {\n        drawerDialog.showModal();\n    }\n}\n\nfunction updateCartSection() {\n    const sectionComponent = document.querySelector('cart-items-component');\n    const sectionId = sectionComponent?.dataset.sectionId;\n    if (!sectionId) return;\n\n    fetch(`/?sections=${sectionId}`)\n        .then(res => res.json())\n        .then(data => {\n            const html = data[sectionId];\n            if (!html) return;\n\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(html, 'text/html');\n            const newContent = doc.querySelector('cart-items-component');\n            const oldContent = document.querySelector('cart-items-component');\n\n            if (newContent && oldContent) {\n                oldContent.innerHTML = newContent.innerHTML;\n            }\n\n            const drawerDialog = document.querySelector('.cart-drawer__dialog');\n            if (drawerDialog?.classList.contains('cart-drawer--empty')) {\n                drawerDialog.classList.remove('cart-drawer--empty');\n            }\n        });\n}"]}